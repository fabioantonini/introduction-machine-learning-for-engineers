{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "e7ff399e-63a7-433f-b66d-0686a06ae8b6",
   "metadata": {},
   "source": [
    "# Multi-label classification problem\n",
    "In a multi-label classification problem, each instance can belong to multiple classes simultaneously. For example, an image might contain both a cat and a dog, and the model should predict both labels.\n",
    "\n",
    "## Example: Multi-Label Classification with TensorFlow\n",
    "We'll use a synthetic dataset for illustration, as most standard datasets are single-label. The key aspects of a multi-label classification model include:\n",
    "\n",
    "Output Layer: Use a sigmoid activation function instead of softmax, as sigmoid can handle multiple outputs independently.\n",
    "Loss Function: Use binary_crossentropy instead of categorical_crossentropy, as each label is considered independently.\n",
    "Hereâ€™s a complete example using TensorFlow:\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "4b549b18-d7f9-4311-9364-512564687882",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting kaggle\n",
      "  Downloading kaggle-1.6.17.tar.gz (82 kB)\n",
      "     ---------------------------------------- 0.0/82.7 kB ? eta -:--:--\n",
      "     ---- ----------------------------------- 10.2/82.7 kB ? eta -:--:--\n",
      "     ---- ----------------------------------- 10.2/82.7 kB ? eta -:--:--\n",
      "     ---------------------------- --------- 61.4/82.7 kB 656.4 kB/s eta 0:00:01\n",
      "     -------------------------------------- 82.7/82.7 kB 658.7 kB/s eta 0:00:00\n",
      "  Preparing metadata (setup.py): started\n",
      "  Preparing metadata (setup.py): finished with status 'done'\n",
      "Requirement already satisfied: six>=1.10 in c:\\users\\fabio\\appdata\\roaming\\python\\python310\\site-packages (from kaggle) (1.16.0)\n",
      "Requirement already satisfied: certifi>=2023.7.22 in c:\\users\\fabio\\appdata\\roaming\\python\\python310\\site-packages (from kaggle) (2024.7.4)\n",
      "Requirement already satisfied: python-dateutil in c:\\users\\fabio\\appdata\\roaming\\python\\python310\\site-packages (from kaggle) (2.9.0.post0)\n",
      "Requirement already satisfied: requests in c:\\users\\fabio\\appdata\\roaming\\python\\python310\\site-packages (from kaggle) (2.32.3)\n",
      "Requirement already satisfied: tqdm in c:\\users\\fabio\\appdata\\roaming\\python\\python310\\site-packages (from kaggle) (4.66.2)\n",
      "Collecting python-slugify (from kaggle)\n",
      "  Downloading python_slugify-8.0.4-py2.py3-none-any.whl.metadata (8.5 kB)\n",
      "Requirement already satisfied: urllib3 in c:\\users\\fabio\\anaconda3\\envs\\tf-env-3.10\\lib\\site-packages (from kaggle) (2.2.2)\n",
      "Requirement already satisfied: bleach in c:\\users\\fabio\\anaconda3\\envs\\tf-env-3.10\\lib\\site-packages (from kaggle) (4.1.0)\n",
      "Requirement already satisfied: packaging in c:\\users\\fabio\\appdata\\roaming\\python\\python310\\site-packages (from bleach->kaggle) (23.2)\n",
      "Requirement already satisfied: webencodings in c:\\users\\fabio\\anaconda3\\envs\\tf-env-3.10\\lib\\site-packages (from bleach->kaggle) (0.5.1)\n",
      "Collecting text-unidecode>=1.3 (from python-slugify->kaggle)\n",
      "  Downloading text_unidecode-1.3-py2.py3-none-any.whl.metadata (2.4 kB)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\fabio\\appdata\\roaming\\python\\python310\\site-packages (from requests->kaggle) (3.3.2)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\fabio\\appdata\\roaming\\python\\python310\\site-packages (from requests->kaggle) (3.7)\n",
      "Requirement already satisfied: colorama in c:\\users\\fabio\\appdata\\roaming\\python\\python310\\site-packages (from tqdm->kaggle) (0.4.6)\n",
      "Downloading python_slugify-8.0.4-py2.py3-none-any.whl (10 kB)\n",
      "Downloading text_unidecode-1.3-py2.py3-none-any.whl (78 kB)\n",
      "   ---------------------------------------- 0.0/78.2 kB ? eta -:--:--\n",
      "   ---------------------------------------- 78.2/78.2 kB 4.5 MB/s eta 0:00:00\n",
      "Building wheels for collected packages: kaggle\n",
      "  Building wheel for kaggle (setup.py): started\n",
      "  Building wheel for kaggle (setup.py): finished with status 'done'\n",
      "  Created wheel for kaggle: filename=kaggle-1.6.17-py3-none-any.whl size=105795 sha256=acecdc6981ee75e158958b4956a9d4708f64acd83b2b3fa2fbdc00a007af430d\n",
      "  Stored in directory: c:\\users\\fabio\\appdata\\local\\pip\\cache\\wheels\\9f\\af\\22\\bf406f913dc7506a485e60dce8143741abd0a92a19337d83a3\n",
      "Successfully built kaggle\n",
      "Installing collected packages: text-unidecode, python-slugify, kaggle\n",
      "Successfully installed kaggle-1.6.17 python-slugify-8.0.4 text-unidecode-1.3\n"
     ]
    }
   ],
   "source": [
    "!pip install kaggle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "9182ef4f-4d4e-4cdd-ae36-4c94519be9aa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dataset URL: https://www.kaggle.com/datasets/heptapod/titanic\n",
      "License(s): DbCL-1.0\n",
      "Downloading titanic.zip to C:\\Users\\Fabio\\Documents\\AI\\Introduction to Machine Learning for Engineers\\Lectures\\NeuralNetworks\\w2\\Notebooks\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "  0%|          | 0.00/10.8k [00:00<?, ?B/s]\n",
      "100%|##########| 10.8k/10.8k [00:00<00:00, 11.1MB/s]\n"
     ]
    }
   ],
   "source": [
    "!kaggle datasets download -d heptapod/titanic"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "55f24fb1-b2a9-4d46-a00c-9da357d8a931",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/5\n",
      "32/32 [==============================] - 2s 32ms/step - loss: 0.6940 - accuracy: 0.1420 - val_loss: 0.6933 - val_accuracy: 0.0150\n",
      "Epoch 2/5\n",
      "32/32 [==============================] - 1s 23ms/step - loss: 0.6930 - accuracy: 0.0020 - val_loss: 0.6933 - val_accuracy: 0.0040\n",
      "Epoch 3/5\n",
      "32/32 [==============================] - 1s 24ms/step - loss: 0.6927 - accuracy: 0.0550 - val_loss: 0.6933 - val_accuracy: 0.0170\n",
      "Epoch 4/5\n",
      "32/32 [==============================] - 1s 23ms/step - loss: 0.6926 - accuracy: 0.3340 - val_loss: 0.6934 - val_accuracy: 0.4580\n",
      "Epoch 5/5\n",
      "32/32 [==============================] - 1s 24ms/step - loss: 0.6925 - accuracy: 0.4150 - val_loss: 0.6937 - val_accuracy: 0.0080\n",
      "32/32 - 0s - loss: 0.6937 - accuracy: 0.0080 - 228ms/epoch - 7ms/step\n",
      "\n",
      "Test accuracy: 0.00800000037997961\n",
      "32/32 [==============================] - 0s 6ms/step\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x1000 with 10 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "from tensorflow.keras import layers, models\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Create a synthetic dataset\n",
    "def create_synthetic_data(num_samples=1000, img_size=(28, 28), num_labels=10):\n",
    "    X = np.random.rand(num_samples, *img_size, 1)  # Random images\n",
    "    y = np.random.randint(0, 2, (num_samples, num_labels))  # Random binary labels\n",
    "    return X, y\n",
    "\n",
    "# Generate synthetic training and testing data\n",
    "train_images, train_labels = create_synthetic_data()\n",
    "test_images, test_labels = create_synthetic_data()\n",
    "\n",
    "# Build the CNN model\n",
    "model = models.Sequential([\n",
    "    layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)),\n",
    "    layers.MaxPooling2D((2, 2)),\n",
    "    layers.Conv2D(64, (3, 3), activation='relu'),\n",
    "    layers.MaxPooling2D((2, 2)),\n",
    "    layers.Conv2D(64, (3, 3), activation='relu'),\n",
    "    layers.Flatten(),\n",
    "    layers.Dense(64, activation='relu'),\n",
    "    layers.Dense(10, activation='sigmoid')  # Multi-label classification uses sigmoid\n",
    "])\n",
    "\n",
    "# Compile the model\n",
    "model.compile(optimizer='adam',\n",
    "              loss='binary_crossentropy',  # Suitable for multi-label classification\n",
    "              metrics=['accuracy'])\n",
    "\n",
    "# Train the model\n",
    "model.fit(train_images, train_labels, epochs=5, validation_data=(test_images, test_labels))\n",
    "\n",
    "# Evaluate the model\n",
    "test_loss, test_acc = model.evaluate(test_images, test_labels, verbose=2)\n",
    "print(f'\\nTest accuracy: {test_acc}')\n",
    "\n",
    "# Make predictions on the test dataset\n",
    "predictions = model.predict(test_images)\n",
    "\n",
    "# Function to visualize the results\n",
    "def visualize_results(images, predictions, true_labels):\n",
    "    plt.figure(figsize=(10, 10))\n",
    "    for i in range(10):\n",
    "        plt.subplot(5, 5, i + 1)\n",
    "        plt.xticks([])\n",
    "        plt.yticks([])\n",
    "        plt.grid(False)\n",
    "        plt.imshow(images[i].squeeze(), cmap=plt.cm.binary)\n",
    "        pred_label = np.round(predictions[i]).astype(int)\n",
    "        true_label = true_labels[i]\n",
    "        plt.xlabel(f\"Pred: {pred_label}\\nTrue: {true_label}\")\n",
    "    plt.tight_layout()\n",
    "    plt.show()\n",
    "\n",
    "# Visualize the first few predictions\n",
    "visualize_results(test_images, predictions, test_labels)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "42d31742-3a3d-45ae-98bf-d0a471e7564d",
   "metadata": {},
   "source": [
    "### Key Points:\n",
    "1. **Synthetic Data Creation**: Since multi-label datasets aren't as common, synthetic data is used for illustration. In practice, you would use a dataset where each instance can have multiple labels.\n",
    "2. **Model Architecture**: The model ends with a dense layer with a `sigmoid` activation function, which allows for multiple outputs where each output node independently predicts the presence of a particular class.\n",
    "3. **Loss Function**: `binary_crossentropy` is used as the loss function, appropriate for multi-label classification where each label can be independently 0 or 1.\n",
    "4. **Evaluation and Visualization**: The model's predictions are visualized, showing both predicted and true labels.\n",
    "\n",
    "You can adjust the complexity of the model and the synthetic data generation process to better match real-world multi-label datasets."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ed5e35a1-ca2e-45ec-9d0b-c227322fe377",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
